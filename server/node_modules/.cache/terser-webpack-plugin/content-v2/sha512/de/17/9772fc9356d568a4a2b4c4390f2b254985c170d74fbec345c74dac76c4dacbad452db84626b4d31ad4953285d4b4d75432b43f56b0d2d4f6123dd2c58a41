{"code":"!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"/\",t(t.s=5)}([function(e,n){e.exports=require(\"express\")},function(e,n){e.exports=require(\"body-parser\")},function(e,n){e.exports=require(\"babel-polyfill\")},function(e,n){e.exports=require(\"pg\")},function(e,n){e.exports=require(\"path\")},function(e,n,t){\"use strict\";t.r(n);var o=t(0),r=t.n(o),a=t(1),i=t.n(a),s=(t(2),t(3));var g={PG_DB_URL:\"mserverdev.cskmchbf1fd8.ap-southeast-1.rds.amazonaws.com\",PORT:\"5000\",DB_USER:\"melonade\",DB_PASS:\"appiansucks\",DB_PORT:5432,DB_DEFAULT_DATABASE:\"pt\"};var u={CONFIGURATION_TABLE:\"PT_CONFIGURATION\"};const c=new s.Pool({host:g.PG_DB_URL,port:g.DB_PORT,database:g.DB_DEFAULT_DATABASE,user:g.DB_USER,password:g.DB_PASS});c.on(\"connect\",()=>{console.log(`Successfully connected to ${g.PG_DB_URL}, databse: ${g.DB_DEFAULT_DATABASE}`)});var l={async updateConfiguration(e){const n=`INSERT INTO public.\"${u.CONFIGURATION_TABLE}\"(project_id, release_tagging, feature_tagging, chore_tagging, bugfix_tagging)\\n                            VALUES('${e.projectId}', '${e.isReleaseTaggingEnabled}', \\n                                    '${e.isFeatureTaggingEnabled}', '${e.isChoreTaggingEnabled}', '${e.isBugfixTaggingEnabled}')\\n                            ON CONFLICT (project_id) DO UPDATE\\n                            SET (release_tagging, feature_tagging, chore_tagging, bugfix_tagging) = ('${e.isReleaseTaggingEnabled}', \\n                            '${e.isFeatureTaggingEnabled}', '${e.isChoreTaggingEnabled}', '${e.isBugfixTaggingEnabled}');`;console.log(n);await c.query(n);return{status:1,text:\"Configuration Saved!\",data:null}},async getConfiguration(e){const n=`SELECT project_id, release_tagging, feature_tagging, chore_tagging, bugfix_tagging, next_release_date, next_review_date FROM\\n                        public.\"${u.CONFIGURATION_TABLE}\" WHERE project_id = '${e}'`;return console.log(n),{status:1,text:null,data:(await c.query(n)).rows}}};var d={async getConfiguration(e,n){const t=e.params.projectId,o=await l.getConfiguration(t);n.send(o)},async saveConfiguration(e,n){const t=e.body;console.log(t);const o=await l.updateConfiguration(t);n.send(o)}};var p={async onTrackerEvent(e,n){e.body;console.log(body),n.send(\"request received\")}};var f=e=>{e.use(function(e,n,t){n.header(\"Access-Control-Allow-Origin\",\"*\"),n.header(\"Access-Control-Allow-Headers\",\"Origin, X-Requested-With, Content-Type, Accept\"),t()}),e.get(\"/test\",(e,n)=>{n.writeHead(200,{\"Content-Type\":\"text/plain\"}),n.end(\"Invalid Endpoint\\n\")}),e.get(\"/api/config/:projectId\",d.getConfiguration),e.post(\"/api/updateconfig\",d.saveConfiguration),e.post(\"/api/pt/hook\",p.onTrackerEvent)},_=t(4),T=t.n(_);const b=r()(),E=process.env.PORT||5e3,A=T.a.join(__dirname,\"build\");b.use(i.a.urlencoded({extended:!1})),b.use(i.a.json()),b.use(\"/\",r.a.static(A)),f(b),b.listen(E,()=>{console.log(`Serving static files from ${A}`),console.log(`Listening on port ${E}`)})}]);","extractedComments":[]}